/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./testing/App.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./lib/events/link-events.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar on_1 = __webpack_require__(\"./lib/events/on.js\");\r\nvar attrState = 'data-pjax-state';\r\nvar isDefaultPrevented = function (el, e, options) {\r\n    var isPrevented = false;\r\n    if (e.defaultPrevented) {\r\n        isPrevented = true;\r\n    }\r\n    else if (el.getAttribute('prevent-pjax') !== null) {\r\n        isPrevented = true;\r\n    }\r\n    else if (el.classList.contains('no-transition')) {\r\n        isPrevented = true;\r\n    }\r\n    else if (el.getAttribute('download') !== null) {\r\n        isPrevented = true;\r\n    }\r\n    else if (el.getAttribute('target') === '_blank') {\r\n        isPrevented = true;\r\n    }\r\n    if (options.length > 0) {\r\n        for (var i = 0; i < options.length; i++) {\r\n            if (el.getAttribute(options[i]) !== null) {\r\n                isPrevented = true;\r\n            }\r\n        }\r\n    }\r\n    return isPrevented;\r\n};\r\nvar checkForAbort = function (el, e) {\r\n    if (el instanceof HTMLAnchorElement) {\r\n        if (el.protocol !== window.location.protocol || el.host !== window.location.host) {\r\n            return 'external';\r\n        }\r\n        if (el.hash && el.href.replace(el.hash, '') === window.location.href.replace(location.hash, '')) {\r\n            return 'anchor';\r\n        }\r\n        if (el.href === window.location.href.split('#')[0] + \", '#'\") {\r\n            return 'anchor-empty';\r\n        }\r\n    }\r\n    return null;\r\n};\r\nvar handleClick = function (el, e, pjax) {\r\n    if (isDefaultPrevented(el, e, pjax.options.customPreventionAttributes)) {\r\n        return;\r\n    }\r\n    var attrValue = checkForAbort(el, e);\r\n    if (attrValue !== null) {\r\n        el.setAttribute(attrState, attrValue);\r\n        return;\r\n    }\r\n    e.preventDefault();\r\n    var elementLink = el.getAttribute('href');\r\n    if (elementLink === window.location.href.split('#')[0]) {\r\n        el.setAttribute(attrState, 'reload');\r\n    }\r\n    else {\r\n        el.setAttribute(attrState, 'load');\r\n    }\r\n    pjax.handleLoad(elementLink, el.getAttribute(attrState), el);\r\n};\r\nvar handleHover = function (el, e, pjax) {\r\n    if (isDefaultPrevented(el, e, pjax.options.customPreventionAttributes)) {\r\n        return;\r\n    }\r\n    if (e.type === 'mouseleave') {\r\n        pjax.clearPrefetch();\r\n        return;\r\n    }\r\n    var attrValue = checkForAbort(el, e);\r\n    if (attrValue !== null) {\r\n        el.setAttribute(attrState, attrValue);\r\n        return;\r\n    }\r\n    var elementLink = el.getAttribute('href');\r\n    if (elementLink !== window.location.href.split('#')[0]) {\r\n        el.setAttribute(attrState, 'prefetch');\r\n    }\r\n    else {\r\n        return;\r\n    }\r\n    pjax.handlePrefetch(elementLink);\r\n};\r\nexports.default = (function (el, pjax) {\r\n    el.setAttribute(attrState, '');\r\n    on_1.default(el, 'click', function (e) { handleClick(el, e, pjax); });\r\n    on_1.default(el, 'mouseenter', function (e) { handleHover(el, e, pjax); });\r\n    on_1.default(el, 'mouseleave', function (e) { handleHover(el, e, pjax); });\r\n    on_1.default(el, 'keyup', function (e) {\r\n        if (e.key === 'enter' || e.keyCode === 13)\r\n            handleClick(el, e, pjax);\r\n    });\r\n});\r\n//# sourceMappingURL=link-events.js.map\n\n//# sourceURL=webpack:///./lib/events/link-events.js?");

/***/ }),

/***/ "./lib/events/on.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = (function (el, event, listener) {\r\n    el.addEventListener(event, listener);\r\n});\r\n//# sourceMappingURL=on.js.map\n\n//# sourceURL=webpack:///./lib/events/on.js?");

/***/ }),

/***/ "./lib/events/trigger.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = (function (el, events, target) {\r\n    if (target === void 0) { target = null; }\r\n    events.forEach(function (e) {\r\n        if (target !== null) {\r\n            var customEvent = new CustomEvent(e, {\r\n                detail: {\r\n                    el: target\r\n                }\r\n            });\r\n            el.dispatchEvent(customEvent);\r\n        }\r\n        else {\r\n            var event_1 = new Event(e);\r\n            el.dispatchEvent(event_1);\r\n        }\r\n    });\r\n});\r\n//# sourceMappingURL=trigger.js.map\n\n//# sourceURL=webpack:///./lib/events/trigger.js?");

/***/ }),

/***/ "./lib/parse-dom.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar get_elements_1 = __webpack_require__(\"./lib/util/get-elements.js\");\r\nvar check_element_1 = __webpack_require__(\"./lib/util/check-element.js\");\r\nexports.default = (function (el, pjax) {\r\n    var elements = get_elements_1.default(el, pjax);\r\n    if (pjax.options.debug && elements.length === 0) {\r\n        console.log('%c[Pjax] ' + \"%cno elements could be found, check what selectors you're providing Pjax\", 'color:#f3ff35', 'color:#eee');\r\n        return;\r\n    }\r\n    for (var i = 0; i < elements.length; i++) {\r\n        check_element_1.default(elements[i], pjax);\r\n    }\r\n});\r\n//# sourceMappingURL=parse-dom.js.map\n\n//# sourceURL=webpack:///./lib/parse-dom.js?");

/***/ }),

/***/ "./lib/parse-options.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = (function (options) {\r\n    if (options === void 0) { options = null; }\r\n    var parsedOptions = (options !== null) ? options : {};\r\n    parsedOptions.elements = (options !== null && options.elements !== undefined) ? options.elements : 'a[href]';\r\n    parsedOptions.selectors = (options !== null && options.selectors !== undefined) ? options.selectors : ['.js-pjax'];\r\n    parsedOptions.history = (options !== null && options.history !== undefined) ? options.history : true;\r\n    parsedOptions.cacheBust = (options !== null && options.cacheBust !== undefined) ? options.cacheBust : false;\r\n    parsedOptions.debug = (options !== null && options.debug !== undefined) ? options.debug : false;\r\n    parsedOptions.timeout = (options !== null && options.timeout !== undefined) ? options.timeout : 0;\r\n    parsedOptions.titleSwitch = (options !== null && options.titleSwitch !== undefined) ? options.titleSwitch : true;\r\n    parsedOptions.customTransitions = (options !== null && options.customTransitions !== undefined) ? options.customTransitions : false;\r\n    parsedOptions.customPreventionAttributes = (options !== null && options.customPreventionAttributes !== undefined) ? options.customPreventionAttributes : [];\r\n    parsedOptions.importScripts = (options !== null && options.importScripts !== undefined) ? options.importScripts : true;\r\n    parsedOptions.importCSS = (options !== null && options.importCSS !== undefined) ? options.importCSS : true;\r\n    return parsedOptions;\r\n});\r\n//# sourceMappingURL=parse-options.js.map\n\n//# sourceURL=webpack:///./lib/parse-options.js?");

/***/ }),

/***/ "./lib/util/check-element.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar link_events_1 = __webpack_require__(\"./lib/events/link-events.js\");\r\nexports.default = (function (el, pjax) {\r\n    if (el.getAttribute('href')) {\r\n        link_events_1.default(el, pjax);\r\n    }\r\n    else {\r\n        if (pjax.options.debug) {\r\n            console.log('%c[Pjax] ' + (\"%c\" + el + \" is missing a href attribute, Pjax couldn't assign the event listener\"), 'color:#f3ff35', 'color:#eee');\r\n        }\r\n    }\r\n});\r\n//# sourceMappingURL=check-element.js.map\n\n//# sourceURL=webpack:///./lib/util/check-element.js?");

/***/ }),

/***/ "./lib/util/clear-active.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = (function () {\r\n    if (document.activeElement) {\r\n        try {\r\n            document.activeElement.blur();\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n});\r\n//# sourceMappingURL=clear-active.js.map\n\n//# sourceURL=webpack:///./lib/util/clear-active.js?");

/***/ }),

/***/ "./lib/util/get-elements.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = (function (el, pjax) {\r\n    var elements = Array.from(el.querySelectorAll(pjax.options.elements));\r\n    return elements;\r\n});\r\n//# sourceMappingURL=get-elements.js.map\n\n//# sourceURL=webpack:///./lib/util/get-elements.js?");

/***/ }),

/***/ "./lib/util/scroll.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.default = (function (scrollTo) {\r\n    window.scrollTo(scrollTo.x, scrollTo.y);\r\n});\r\n//# sourceMappingURL=scroll.js.map\n\n//# sourceURL=webpack:///./lib/util/scroll.js?");

/***/ }),

/***/ "./node_modules/@codewithkyle/device-manager/DeviceManager.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar DeviceManager = /** @class */ (function () {\n    function DeviceManager(debug, setStatusClasses) {\n        var _this = this;\n        this.handleMouseEvent = function (e) {\n            _this._body.removeEventListener('mouseover', _this.handleMouseEvent);\n            _this._html.classList.add('is-pointer-device');\n            _this._html.classList.remove('is-not-pointer-device');\n            if (_this._isDebug) {\n                console.log('%c[Device Manager] ' + \"%cUser is using a pointer device\", 'color:#35ffb8', 'color:#eee');\n            }\n        };\n        this.handleTouchEvent = function (e) {\n            _this._body.removeEventListener('touchstart', _this.handleTouchEvent);\n            _this._html.classList.add('has-touched');\n            if (_this._isDebug) {\n                console.log('%c[Device Manager] ' + \"%cUser has touched their device\", 'color:#35ffb8', 'color:#eee');\n            }\n        };\n        this._isDebug = (debug) ? debug : false;\n        this._html = document.documentElement;\n        this._body = document.body;\n        if (setStatusClasses) {\n            this.setStatusClasses();\n        }\n    }\n    /**\n     * Sets custom status classes on the HTML Document.\n     */\n    DeviceManager.prototype.setStatusClasses = function () {\n        this._html.classList.add('has-js');\n        this._html.classList.remove('has-no-js');\n        if (this._isDebug) {\n            console.log('%c[Device Manager] ' + \"%cSetting status classes\", 'color:#35ffb8', 'color:#eee');\n        }\n        this._body.addEventListener('mouseover', this.handleMouseEvent);\n        this._body.addEventListener('touchstart', this.handleTouchEvent);\n        if (DeviceManager.supportsTouch) {\n            this._html.classList.add('is-touch-device');\n            this._html.classList.remove('is-not-touch-device');\n            if (this._isDebug) {\n                console.log('%c[Device Manager] ' + (\"%cSupports Touch: %c\" + DeviceManager.supportsTouch), 'color:#35ffb8', 'color:#eee', 'color:#68e5ff');\n            }\n        }\n        if (DeviceManager.isBlinkEngine) {\n            this._html.classList.add('is-blink');\n            if (this._isDebug) {\n                console.log('%c[Device Manager] ' + (\"%cUsing Blink Engine: %c\" + DeviceManager.isBlinkEngine), 'color:#35ffb8', 'color:#eee', 'color:#68e5ff');\n            }\n        }\n        if (DeviceManager.isChrome) {\n            this._html.classList.add('is-chrome');\n            if (this._isDebug) {\n                console.log('%c[Device Manager] ' + (\"%cChrome: %c\" + DeviceManager.isChrome), 'color:#35ffb8', 'color:#eee', 'color:#68e5ff');\n            }\n        }\n        if (DeviceManager.isIE) {\n            this._html.classList.add('is-ie');\n            if (this._isDebug) {\n                console.log('%c[Device Manager] ' + (\"%cInternet Explorer: %c\" + DeviceManager.isIE), 'color:#35ffb8', 'color:#eee', 'color:#68e5ff');\n            }\n        }\n        if (DeviceManager.isEdge) {\n            this._html.classList.add('is-edge');\n            if (this._isDebug) {\n                console.log('%c[Device Manager] ' + (\"%cEdge: %c\" + DeviceManager.isEdge), 'color:#35ffb8', 'color:#eee', 'color:#68e5ff');\n            }\n        }\n        if (DeviceManager.isFirefox) {\n            this._html.classList.add('is-firefox');\n            if (this._isDebug) {\n                console.log('%c[Device Manager] ' + (\"%cFirefox: %c\" + DeviceManager.isFirefox), 'color:#35ffb8', 'color:#eee', 'color:#68e5ff');\n            }\n        }\n        if (DeviceManager.isSafari) {\n            this._html.classList.add('is-safari');\n            if (this._isDebug) {\n                console.log('%c[Device Manager] ' + (\"%cSafari: %c\" + DeviceManager.isSafari), 'color:#35ffb8', 'color:#eee', 'color:#68e5ff');\n            }\n        }\n        if (DeviceManager.isOpera) {\n            this._html.classList.add('is-opera');\n            if (this._isDebug) {\n                console.log('%c[Device Manager] ' + (\"%cOpera: %c\" + DeviceManager.isOpera), 'color:#35ffb8', 'color:#eee', 'color:#68e5ff');\n            }\n        }\n    };\n    /**\n     * Checks if the browser is Chrome 1 - 71.\n     * @returns `boolean`\n     */\n    DeviceManager.isChrome = (function () {\n        var isChrome = false;\n        // @ts-ignore\n        if (!!window.chrome && (window.StyleMedia === undefined)) {\n            isChrome = true;\n        }\n        return isChrome;\n    })();\n    /**\n     * Checks if the browser is Edge 20+.\n     * @returns `boolean`\n     */\n    DeviceManager.isEdge = (function () {\n        var isEdge = false;\n        // @ts-ignore\n        if (!!window.StyleMedia && !!window.chrome) {\n            isEdge = true;\n        }\n        return isEdge;\n    })();\n    /**\n     * Checks if the browser is Internet Explorer 6 - 11.\n     * @returns `boolean`\n     */\n    DeviceManager.isIE = (function () {\n        var isIE = false;\n        // @ts-ignore\n        if (!!window.MSInputMethodContext && !!document.documentMode && (window.chrome === undefined)) {\n            isIE = true;\n        }\n        return isIE;\n    })();\n    /**\n     * Checks if the browser is Firefox 1+.\n     * @returns `boolean`\n     */\n    DeviceManager.isFirefox = (function () {\n        var isFirefox = false;\n        // @ts-ignore\n        if (typeof InstallTrigger !== 'undefined') {\n            isFirefox = true;\n        }\n        return isFirefox;\n    })();\n    /**\n     * Checks if the browser is Safari 3+.\n     * @returns `boolean`\n     */\n    DeviceManager.isSafari = (function () {\n        var isSafari = false;\n        // @ts-ignore\n        if (/constructor/i.test(window.HTMLElement) || (function (p) { return p.toString() === \"[object SafariRemoteNotification]\"; })(!window['safari'] || (typeof safari !== 'undefined' && safari.pushNotification))) {\n            isSafari = true;\n        }\n        return isSafari;\n    })();\n    /**\n     * Checks if the browser is Opera 8+.\n     * @returns `boolean`\n     */\n    DeviceManager.isOpera = (function () {\n        var isOpera = false;\n        // @ts-ignore\n        if ((!!window.opr && !!opr.addons) || !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0) {\n            isOpera = true;\n        }\n        return isOpera;\n    })();\n    /**\n     * Checks if the browser is using the Blink Engine.\n     * @see https://en.wikipedia.org/wiki/Blink_(browser_engine)\n     * @returns `boolean`\n     */\n    DeviceManager.isBlinkEngine = (function () {\n        var isBlink = false;\n        // @ts-ignore\n        if ((DeviceManager.isChrome || DeviceManager.isOpera) && !!window.CSS) {\n            isBlink = true;\n        }\n        return isBlink;\n    })();\n    /**\n     * Checks if the browser supports touch input.\n     * @returns `boolean`\n     */\n    DeviceManager.supportsTouch = (function () {\n        var isTouchSupported = false;\n        if (('ontouchstart' in window) || (navigator.maxTouchPoints > 0) || (navigator.msMaxTouchPoints > 0)) {\n            isTouchSupported = true;\n        }\n        return isTouchSupported;\n    })();\n    return DeviceManager;\n}());\nexports.default = DeviceManager;\n//# sourceMappingURL=DeviceManager.js.map\n\n//# sourceURL=webpack:///./node_modules/@codewithkyle/device-manager/DeviceManager.js?");

/***/ }),

/***/ "./node_modules/@codewithkyle/state-manager/lib/util/timestamp.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Grab the current timestamp.\n * @returns `Date.now()` number\n */\nexports.default = (function () {\n    return Date.now();\n});\n//# sourceMappingURL=timestamp.js.map\n\n//# sourceURL=webpack:///./node_modules/@codewithkyle/state-manager/lib/util/timestamp.js?");

/***/ }),

/***/ "./node_modules/@codewithkyle/state-manager/manager.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar timestamp_1 = __webpack_require__(\"./node_modules/@codewithkyle/state-manager/lib/util/timestamp.js\");\nvar StateManager = /** @class */ (function () {\n    function StateManager(debug, initialpushState) {\n        this._doInitialPushState = (initialpushState) ? initialpushState : false;\n        StateManager._isDebug = (debug) ? debug : false;\n        // Check if the initial page state needs to be pushed into history\n        if (this._doInitialPushState) {\n            StateManager.doReplace(window.location.href);\n        }\n    }\n    /**\n     * Replaces the current `StateObject` in the windows history.\n     * @param stateObject - the new`StateObject`\n     */\n    StateManager.handleReplaceState = function (stateObject) {\n        if (StateManager._isDebug) {\n            console.log('Replacing History State: ', stateObject);\n        }\n        window.history.replaceState(stateObject, stateObject.title, stateObject.uri);\n    };\n    /**\n     * Pushes the `StateObject` into the windows history.\n     * @param stateObject - `StateObject` that will be pushed into the windows history\n     */\n    StateManager.handlePushState = function (stateObject) {\n        if (StateManager._isDebug) {\n            console.log('Pushing History State: ', stateObject);\n        }\n        window.history.pushState(stateObject, stateObject.title, stateObject.uri);\n    };\n    /**\n     * Builds the custom `StateObject`\n     * @param pageURI - the new URI of the page\n     * @param isPushstate - the new document title\n     * @param pageTitle - the current scroll position of the page\n     */\n    StateManager.buildStateObject = function (pageURI, isPushstate, pageTitle, scrollOffset) {\n        var stateObject = {\n            uri: pageURI,\n            timestamp: timestamp_1.default(),\n            history: isPushstate,\n            scrollPos: {\n                x: (window.scrollX + scrollOffset.x),\n                y: (window.scrollY + scrollOffset.y)\n            }\n        };\n        stateObject.title = (pageTitle !== null && pageTitle !== undefined) ? pageTitle : document.title;\n        // Handle the state type\n        if (isPushstate) {\n            StateManager.handlePushState(stateObject);\n        }\n        else {\n            StateManager.handleReplaceState(stateObject);\n        }\n    };\n    /**\n     * Called when a new `window.history.pushState()` needs to occur.\n     * @param uri - the new URI of the page\n     * @param title - the new document title\n     * @param scrollPosition - the current scroll position of the page\n     */\n    StateManager.doPush = function (uri, title, scrollOffset) {\n        if (title === void 0) { title = document.title; }\n        if (scrollOffset === void 0) { scrollOffset = { x: 0, y: 0 }; }\n        StateManager.buildStateObject(uri, true, title, scrollOffset);\n    };\n    /**\n     * Called when a new `window.history.replaceState()` needs to occur.\n     * @param uri - the new URI of the page\n     * @param title - the new document title\n     * @param scrollPosition - the current scroll position of the page\n     */\n    StateManager.doReplace = function (uri, title, scrollOffset) {\n        if (title === void 0) { title = document.title; }\n        if (scrollOffset === void 0) { scrollOffset = { x: 0, y: 0 }; }\n        StateManager.buildStateObject(uri, false, title, scrollOffset);\n    };\n    return StateManager;\n}());\nexports.default = StateManager;\n//# sourceMappingURL=manager.js.map\n\n//# sourceURL=webpack:///./node_modules/@codewithkyle/state-manager/manager.js?");

/***/ }),

/***/ "./pjax.js":
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar parse_options_1 = __webpack_require__(\"./lib/parse-options.js\");\r\nvar trigger_1 = __webpack_require__(\"./lib/events/trigger.js\");\r\nvar parse_dom_1 = __webpack_require__(\"./lib/parse-dom.js\");\r\nvar scroll_1 = __webpack_require__(\"./lib/util/scroll.js\");\r\nvar clear_active_1 = __webpack_require__(\"./lib/util/clear-active.js\");\r\nvar state_manager_1 = __webpack_require__(\"./node_modules/@codewithkyle/state-manager/manager.js\");\r\nvar device_manager_1 = __webpack_require__(\"./node_modules/@codewithkyle/device-manager/DeviceManager.js\");\r\nvar Pjax = (function () {\r\n    function Pjax(options) {\r\n        var _this = this;\r\n        this.handlePopstate = function (e) {\r\n            if (e.state) {\r\n                if (_this.options.debug) {\r\n                    console.log('%c[Pjax] ' + \"%chijacking popstate event\", 'color:#f3ff35', 'color:#eee');\r\n                }\r\n                _this._scrollTo = e.state.scrollPos;\r\n                _this.loadUrl(e.state.uri, 'popstate');\r\n            }\r\n        };\r\n        this.handleContinue = function (e) {\r\n            if (_this._cachedSwitch !== null) {\r\n                if (_this.options.titleSwitch) {\r\n                    document.title = _this._cachedSwitch.title;\r\n                }\r\n                _this.handleSwitches(_this._cachedSwitch.queue);\r\n            }\r\n            else {\r\n                if (_this.options.debug) {\r\n                    console.log('%c[Pjax] ' + \"%cswitch queue was empty. You might be sending pjax:continue early\", 'color:#f3ff35', 'color:#eee');\r\n                }\r\n                trigger_1.default(document, ['pjax:error']);\r\n            }\r\n        };\r\n        this._dom = document.documentElement;\r\n        if (device_manager_1.default.isIE) {\r\n            console.log('%c[Pjax] ' + \"%cIE 11 detected - Pjax aborted\", 'color:#f3ff35', 'color:#eee');\r\n            this._dom.classList.remove('dom-is-loading');\r\n            this._dom.classList.add('dom-is-loaded');\r\n            return;\r\n        }\r\n        this._cache = null;\r\n        this.options = parse_options_1.default(options);\r\n        this._request = null;\r\n        this._response = null;\r\n        this._confirmed = false;\r\n        this._cachedSwitch = null;\r\n        this._scrollTo = { x: 0, y: 0 };\r\n        this._isPushstate = true;\r\n        this.init();\r\n    }\r\n    Pjax.prototype.init = function () {\r\n        if (this.options.debug) {\r\n            console.log('%c[Pjax] ' + (\"%cinitializing Pjax version \" + Pjax.VERSION), 'color:#f3ff35', 'color:#eee');\r\n            console.log('%c[Pjax] ' + \"%cview Pjax documentation at http://papertrain.io/pjax\", 'color:#f3ff35', 'color:#eee');\r\n            console.log('%c[Pjax] ' + \"%cloaded with the following options: \", 'color:#f3ff35', 'color:#eee');\r\n            console.log(this.options);\r\n        }\r\n        this._dom.classList.add('dom-is-loaded');\r\n        this._dom.classList.remove('dom-is-loading');\r\n        new state_manager_1.default(this.options.debug, true);\r\n        window.addEventListener('popstate', this.handlePopstate);\r\n        if (this.options.customTransitions) {\r\n            document.addEventListener('pjax:continue', this.handleContinue);\r\n        }\r\n        parse_dom_1.default(document.body, this);\r\n    };\r\n    Pjax.prototype.loadUrl = function (href, loadType) {\r\n        if (this._confirmed) {\r\n            return;\r\n        }\r\n        this.abortRequest();\r\n        this._cache = null;\r\n        this.handleLoad(href, loadType);\r\n    };\r\n    Pjax.prototype.abortRequest = function () {\r\n        this._request = null;\r\n        this._response = null;\r\n    };\r\n    Pjax.prototype.finalize = function () {\r\n        if (this.options.debug) {\r\n            console.log('%c[Pjax] ' + \"%cpage transition completed\", 'color:#f3ff35', 'color:#eee');\r\n        }\r\n        scroll_1.default(this._scrollTo);\r\n        if (this.options.history) {\r\n            if (this._isPushstate) {\r\n                state_manager_1.default.doPush(this._response.url, document.title);\r\n            }\r\n            else {\r\n                state_manager_1.default.doReplace(this._response.url, document.title);\r\n            }\r\n        }\r\n        trigger_1.default(document, ['pjax:complete']);\r\n        this._dom.classList.add('dom-is-loaded');\r\n        this._dom.classList.remove('dom-is-loading');\r\n        this._cache = null;\r\n        this._request = null;\r\n        this._response = null;\r\n        this._cachedSwitch = null;\r\n        this._isPushstate = true;\r\n        this._scrollTo = { x: 0, y: 0 };\r\n        this._confirmed = false;\r\n    };\r\n    Pjax.prototype.handleSwitches = function (switchQueue) {\r\n        for (var i = 0; i < switchQueue.length; i++) {\r\n            switchQueue[i].current.innerHTML = switchQueue[i].new.innerHTML;\r\n            parse_dom_1.default(switchQueue[i].current, this);\r\n        }\r\n        this.finalize();\r\n    };\r\n    Pjax.prototype.switchSelectors = function (selectors, tempDocument) {\r\n        var _this = this;\r\n        if (tempDocument === null) {\r\n            if (this.options.debug) {\r\n                console.log('%c[Pjax] ' + (\"%ctemporary document was null, telling the browser to load \" + ((this._cache !== null) ? this._cache.url : this._response.url)), 'color:#f3ff35', 'color:#eee');\r\n            }\r\n            if (this._cache !== null) {\r\n                this.lastChance(this._cache.url);\r\n            }\r\n            else {\r\n                this.lastChance(this._response.url);\r\n            }\r\n        }\r\n        var switchQueue = [];\r\n        if (!this.options.importScripts) {\r\n            var newScripts = Array.from(tempDocument.querySelectorAll('script'));\r\n            if (newScripts.length) {\r\n                var currentScripts_1 = Array.from(document.querySelectorAll('script'));\r\n                newScripts.forEach(function (newScript) {\r\n                    var isNewScript = true;\r\n                    currentScripts_1.forEach(function (currentScript) {\r\n                        if (newScript.src === currentScript.src) {\r\n                            isNewScript = false;\r\n                        }\r\n                    });\r\n                    if (isNewScript) {\r\n                        if (_this.options.debug) {\r\n                            console.log('%c[Pjax] ' + \"%cthe new page contains scripts\", 'color:#f3ff35', 'color:#eee');\r\n                        }\r\n                        _this.lastChance(_this._response.url);\r\n                        return;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        for (var i = 0; i < selectors.length; i++) {\r\n            var newContainers = Array.from(tempDocument.querySelectorAll(selectors[i]));\r\n            var currentContainers = Array.from(document.querySelectorAll(selectors[i]));\r\n            if (this.options.debug) {\r\n                console.log('%c[Pjax] ' + (\"%cswapping content from \" + selectors[i]), 'color:#f3ff35', 'color:#eee');\r\n            }\r\n            if (newContainers.length !== currentContainers.length) {\r\n                if (this.options.debug) {\r\n                    console.log('%c[Pjax] ' + \"%cthe dom doesn't look the same\", 'color:#f3ff35', 'color:#eee');\r\n                }\r\n                this.lastChance(this._response.url);\r\n                return;\r\n            }\r\n            for (var k = 0; k < newContainers.length; k++) {\r\n                var newContainer = newContainers[k];\r\n                var currentContainer = currentContainers[k];\r\n                var switchObject = {\r\n                    new: newContainer,\r\n                    current: currentContainer\r\n                };\r\n                switchQueue.push(switchObject);\r\n            }\r\n        }\r\n        if (switchQueue.length === 0) {\r\n            if (this.options.debug) {\r\n                console.log('%c[Pjax] ' + \"%ccouldn't find anything to switch\", 'color:#f3ff35', 'color:#eee');\r\n            }\r\n            this.lastChance(this._response.url);\r\n            return;\r\n        }\r\n        if (!this.options.customTransitions) {\r\n            if (this.options.titleSwitch) {\r\n                document.title = tempDocument.title;\r\n            }\r\n            this.handleSwitches(switchQueue);\r\n        }\r\n        else {\r\n            this._cachedSwitch = {\r\n                queue: switchQueue,\r\n                title: tempDocument.title\r\n            };\r\n        }\r\n    };\r\n    Pjax.prototype.lastChance = function (uri) {\r\n        if (this.options.debug) {\r\n            console.log('%c[Pjax] ' + (\"%csomething caused Pjax to break, native loading \" + uri), 'color:#f3ff35', 'color:#eee');\r\n        }\r\n        window.location.href = uri;\r\n    };\r\n    Pjax.prototype.statusCheck = function () {\r\n        for (var status_1 = 200; status_1 <= 206; status_1++) {\r\n            if (this._cache.status === status_1) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    Pjax.prototype.loadCachedContent = function () {\r\n        if (!this.statusCheck()) {\r\n            this.lastChance(this._cache.url);\r\n            return;\r\n        }\r\n        clear_active_1.default();\r\n        state_manager_1.default.doReplace(window.location.href, document.title);\r\n        if (this.options.importScripts) {\r\n            this.handleScripts(this._cache.document);\r\n        }\r\n        this.switchSelectors(this.options.selectors, this._cache.document);\r\n    };\r\n    Pjax.prototype.parseContent = function (responseText) {\r\n        var tempDocument = document.implementation.createHTMLDocument('pjax-temp-document');\r\n        var contentType = this._response.headers.get('Content-Type');\r\n        var htmlRegex = /text\\/html/gi;\r\n        var matches = contentType.match(htmlRegex);\r\n        if (matches !== null) {\r\n            tempDocument.documentElement.innerHTML = responseText;\r\n            return tempDocument;\r\n        }\r\n        return null;\r\n    };\r\n    Pjax.prototype.cacheContent = function (responseText, responseStatus, uri) {\r\n        var tempDocument = this.parseContent(responseText);\r\n        this._cache = {\r\n            status: responseStatus,\r\n            document: tempDocument,\r\n            url: uri\r\n        };\r\n        if (tempDocument instanceof HTMLDocument) {\r\n            if (this.options.debug) {\r\n                console.log('%c[Pjax] ' + \"%ccaching content\", 'color:#f3ff35', 'color:#eee');\r\n            }\r\n        }\r\n        else {\r\n            if (this.options.debug) {\r\n                console.log('%c[Pjax] ' + \"%cresponse wan't an HTML document\", 'color:#f3ff35', 'color:#eee');\r\n            }\r\n            trigger_1.default(document, ['pjax:error']);\r\n        }\r\n    };\r\n    Pjax.prototype.loadContent = function (responseText) {\r\n        var tempDocument = this.parseContent(responseText);\r\n        if (tempDocument instanceof HTMLDocument) {\r\n            clear_active_1.default();\r\n            state_manager_1.default.doReplace(window.location.href, document.title);\r\n            if (this.options.importScripts) {\r\n                this.handleScripts(tempDocument);\r\n            }\r\n            this.switchSelectors(this.options.selectors, tempDocument);\r\n        }\r\n        else {\r\n            if (this.options.debug) {\r\n                console.log('%c[Pjax] ' + \"%cresponse wasn't an HTML document\", 'color:#f3ff35', 'color:#eee');\r\n            }\r\n            trigger_1.default(document, ['pjax:error']);\r\n            this.lastChance(this._response.url);\r\n            return;\r\n        }\r\n    };\r\n    Pjax.prototype.handleScripts = function (newDocument) {\r\n        var _this = this;\r\n        var newScripts = Array.from(newDocument.querySelectorAll('script'));\r\n        var currentScripts = Array.from(document.querySelectorAll('script'));\r\n        var scriptsToAppend = [];\r\n        newScripts.forEach(function (newScript) {\r\n            var appendScript = true;\r\n            currentScripts.forEach(function (currentScript) {\r\n                if (newScript.src === currentScript.src\r\n                    || newScript.src === currentScript.dataset.source\r\n                    || \"\" + window.location.origin + window.location.pathname + newScript.src === currentScript.dataset.source\r\n                    || \"\" + window.location.origin + window.location.pathname + newScript.src === currentScript.src) {\r\n                    appendScript = false;\r\n                }\r\n            });\r\n            if (appendScript) {\r\n                scriptsToAppend.push(newScript);\r\n            }\r\n        });\r\n        if (scriptsToAppend.length) {\r\n            scriptsToAppend.forEach(function (script) {\r\n                if (script.src === '') {\r\n                    var newScript = document.createElement('script');\r\n                    newScript.dataset.source = _this._response.url;\r\n                    newScript.innerHTML = script.innerHTML;\r\n                    document.body.appendChild(newScript);\r\n                }\r\n                else {\r\n                    (function () { return __awaiter(_this, void 0, void 0, function () {\r\n                        var response, responseText, newScript;\r\n                        return __generator(this, function (_a) {\r\n                            switch (_a.label) {\r\n                                case 0: return [4, fetch(script.src)];\r\n                                case 1:\r\n                                    response = _a.sent();\r\n                                    return [4, response.text()];\r\n                                case 2:\r\n                                    responseText = _a.sent();\r\n                                    newScript = document.createElement('script');\r\n                                    newScript.dataset.source = script.src;\r\n                                    newScript.innerHTML = responseText;\r\n                                    document.body.appendChild(newScript);\r\n                                    return [2];\r\n                            }\r\n                        });\r\n                    }); })();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Pjax.prototype.handleResponse = function (response) {\r\n        var _this = this;\r\n        if (this.options.debug) {\r\n            console.log('%c[Pjax] ' + (\"%cRequest status: \" + response.status), 'color:#f3ff35', 'color:#eee');\r\n        }\r\n        if (!response.ok) {\r\n            trigger_1.default(document, ['pjax:error']);\r\n            return;\r\n        }\r\n        this._response = response;\r\n        response.text().then(function (responseText) {\r\n            switch (_this._request) {\r\n                case 'prefetch':\r\n                    if (_this._confirmed) {\r\n                        _this.loadContent(responseText);\r\n                    }\r\n                    else {\r\n                        _this.cacheContent(responseText, _this._response.status, _this._response.url);\r\n                    }\r\n                    break;\r\n                case 'popstate':\r\n                    _this._isPushstate = false;\r\n                    _this.loadContent(responseText);\r\n                    break;\r\n                case 'reload':\r\n                    _this._isPushstate = false;\r\n                    _this.loadContent(responseText);\r\n                    break;\r\n                default:\r\n                    _this.loadContent(responseText);\r\n                    break;\r\n            }\r\n        });\r\n    };\r\n    Pjax.prototype.doRequest = function (href) {\r\n        var _this = this;\r\n        var uri = href;\r\n        var queryString = href.split('?')[1];\r\n        if (this.options.cacheBust) {\r\n            uri += (queryString === undefined) ? (\"?cb=\" + Date.now()) : (\"&cb=\" + Date.now());\r\n        }\r\n        fetch(uri).then(function (response) {\r\n            _this.handleResponse(response);\r\n        }).catch(function (error) {\r\n            if (_this.options.debug) {\r\n                console.group();\r\n                console.error('%c[Pjax] ' + \"%cFetch error:\", 'color:#f3ff35', 'color:#eee');\r\n                console.error(error);\r\n                console.groupEnd();\r\n            }\r\n        });\r\n    };\r\n    Pjax.prototype.handlePrefetch = function (href) {\r\n        if (this._confirmed) {\r\n            return;\r\n        }\r\n        if (this.options.debug) {\r\n            console.log('%c[Pjax] ' + (\"%cprefetching \" + href), 'color:#f3ff35', 'color:#eee');\r\n        }\r\n        this.abortRequest();\r\n        trigger_1.default(document, ['pjax:prefetch']);\r\n        this._request = 'prefetch';\r\n        this.doRequest(href);\r\n    };\r\n    Pjax.prototype.handleLoad = function (href, loadType, el) {\r\n        if (el === void 0) { el = null; }\r\n        if (this._confirmed) {\r\n            return;\r\n        }\r\n        trigger_1.default(document, ['pjax:send'], el);\r\n        this._dom.classList.remove('dom-is-loaded');\r\n        this._dom.classList.add('dom-is-loading');\r\n        this._confirmed = true;\r\n        if (this._cache !== null) {\r\n            if (this.options.debug) {\r\n                console.log('%c[Pjax] ' + (\"%cloading cached content from \" + href), 'color:#f3ff35', 'color:#eee');\r\n            }\r\n            this.loadCachedContent();\r\n        }\r\n        else if (this._request !== 'prefetch') {\r\n            if (this.options.debug) {\r\n                console.log('%c[Pjax] ' + (\"%cloading \" + href), 'color:#f3ff35', 'color:#eee');\r\n            }\r\n            this._request = loadType;\r\n            this.doRequest(href);\r\n        }\r\n    };\r\n    Pjax.prototype.clearPrefetch = function () {\r\n        if (!this._confirmed) {\r\n            this._cache = null;\r\n            this.abortRequest();\r\n            trigger_1.default(document, ['pjax:cancel']);\r\n        }\r\n    };\r\n    Pjax.VERSION = '2.0.0';\r\n    return Pjax;\r\n}());\r\nexports.default = Pjax;\r\n//# sourceMappingURL=pjax.js.map\n\n//# sourceURL=webpack:///./pjax.js?");

/***/ }),

/***/ "./testing/App.js":
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _pjax__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(\"./pjax.js\");\n/* harmony import */ var _pjax__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_pjax__WEBPACK_IMPORTED_MODULE_0__);\n\r\n\r\n/**\r\n * IIFE for starting Pjax on load\r\n */\r\n(function(){\r\n    var pjax = new _pjax__WEBPACK_IMPORTED_MODULE_0___default.a({ debug:true, importScripts: false });\r\n\r\n    var prefetchLight = document.body.querySelector('.js-prefetch');\r\n    var loadLight = document.body.querySelector('.js-load');\r\n    var errorLight = document.body.querySelector('.js-error');\r\n    var cancelLight = document.body.querySelector('.js-cancel');\r\n    var completeLight = document.body.querySelector('.js-complete');\r\n\r\n    var clearEventsButton = document.body.querySelector('.js-clear');\r\n\r\n    function clearStatus(){\r\n        prefetchLight.classList.remove('is-lit');\r\n        loadLight.classList.remove('is-lit');\r\n        errorLight.classList.remove('is-lit');\r\n        cancelLight.classList.remove('is-lit');\r\n        completeLight.classList.remove('is-lit');\r\n    }\r\n\r\n    clearEventsButton.addEventListener('click', function(e){\r\n        clearStatus();\r\n    });\r\n\r\n    document.addEventListener('pjax:prefetch', function(e){\r\n        clearStatus();\r\n        prefetchLight.classList.add('is-lit');\r\n    });\r\n\r\n    document.addEventListener('pjax:send', function(e){\r\n        loadLight.classList.add('is-lit');\r\n    });\r\n\r\n    document.addEventListener('pjax:error', function(e){\r\n        errorLight.classList.add('is-lit');\r\n    });\r\n\r\n    document.addEventListener('pjax:cancel', function(e){\r\n        cancelLight.classList.add('is-lit');\r\n    });\r\n\r\n    document.addEventListener('pjax:complete', function(e){\r\n        completeLight.classList.add('is-lit');\r\n    });\r\n})();\r\n\n\n//# sourceURL=webpack:///./testing/App.js?");

/***/ })

/******/ });